import yfinance as yf
from datetime import datetime, timezone, timedelta
import time
import os

#Delay in minutes
delay = 15

tickerSymbols = ["MMM", "ABT", "ABBV", "ACN", "ADBE", "AMD", "AES", "AFL", "A", "APD", "AKAM", "ALK", "ALB", "ARE", "ALGN", "ALLE", "LNT", "ALL", "GOOGL", "GOOG", "MO", "AMZN", "AMCR", "AEE", "AAL", "AEP", "AXP", "AIG", "AMT", "AWK", "AMP", "AME", "AMGN", "APH", "ADI", "ANSS", "AON", "AOS", "APA", "AAPL", "AMAT", "APTV", "ADM", "ANET", "AJG", "AIZ", "ATO", "T", "ADSK", "ADP", "AZO", "AVB", "AVY", "BKR", "BAC", "BK", "BAX", "BDX", "BBY", "BIIB", "BLK", "BA", "BKNG", "BWA", "BXP", "BSX", "BMY", "AVGO", "BR", "CHRW", "CDNS", "CPB", "COF", "CPRI", "CAH", "KMX", "CCL", "CAT", "CBOE", "CBRE", "CDW", "CE", "CNC", "CNP", "CF", "SCHW", "CHTR", "CVX", "CMG", "CB", "CHD", "CI", "CINF", "CTAS", "CSCO", "C", "CFG","CLX", "CME", "CMS", "KO", "CTSH", "CL", "CMCSA", "CMA", "CAG", "COP", "ED", "STZ", "COO", "GLW", "COST", "COTY", "CCI", "CSX", "CMI", "CVS", "DHI", "DHR", "DRI", "DVA", "DE", "DAL", "XRAY", "DVN", "FANG", "DLR", "DFS","DISH", "DG", "DLTR", "D", "DPZ", "DOV", "DOW", "DTE", "DUK", "DD", "DXC","EMN", "ETN", "EBAY", "ECL", "EIX", "EW", "EA", "EMR", "ETR", "EOG", "EFX", "EQIX", "EQR", "ESS", "EL", "ETSY", "EVRG", "ES", "EXC", "EXPE", "EXPD", "EXR", "XOM", "FFIV", "META", "FAST", "FRT", "FDX", "FIS", "FITB", "FE"]


timern = datetime.now(timezone(timedelta(hours=-5)))
time15 = datetime.now(timezone(timedelta(hours=-5)))
daylater = (datetime.today() + timedelta(hours=29)).date()

hour15 = (time15.hour)
minute15 = time15.minute-delay
if (time15.minute)-delay < 0 & time15.minute != delay:
  minute15 = 60 + (time15.minute-delay)
  hour15 -= 1

plugtime = str(timern.date()) + " " + str(timern.hour) + ":" + str(timern.minute) + ":00"
plugtime15 = str(timern.date()) + " " + str(hour15) + ":" + str(minute15) + ":00"

print(plugtime) #Print Real Time in EST
print(plugtime15) #Prints Investopedia time 
print()

def function(ticker):
  TickerSymb = yf.Ticker(ticker)
  historical = TickerSymb.history(start = timern.date(), end = daylater, interval = "1m")
  print(TickerSymb.info["shortName"])  
  if plugtime15 in historical.index:
    val15 = historical.loc[plugtime15].Open
    val15Bool = True
    print("Value Now: " + str(val15))
  else:
    print("Data not available for " + plugtime15)
    val15Bool = False
  if plugtime in historical.index:
    val = historical.loc[plugtime].Open
    print("Value Ltr: " + str(val))
    valBool = True
  else:
    print("Data not available for " + plugtime)
    valBool = False

  if val15Bool and valBool:
    change = (val-val15)/val15
    print("Change in percent: " + str(change))
    print()
    return change
  else:
    print("No change available")
    print()
    return 0
    
max = 0
maxticker = ""
for ticker in tickerSymbols:  
  print(ticker)
  change = function(ticker)
  if change > max:
    max = change
    maxticker = ticker

print("Brand: " + maxticker)
print("Max Change: " + str(max))
#print(aapl.info["shortName"])
